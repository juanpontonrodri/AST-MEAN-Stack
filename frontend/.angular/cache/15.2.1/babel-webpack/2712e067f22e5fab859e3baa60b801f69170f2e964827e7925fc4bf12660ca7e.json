{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Output } from '@angular/core';\nlet GetPokemonComponent = class GetPokemonComponent {\n  constructor(PokemonService) {\n    this.PokemonService = PokemonService;\n    this.showresults = false;\n    this.showformflag = false;\n    this.pokemons = [];\n    this.showmodifyflag = false;\n    this.url1 = \"https://assets.pokemon.com/assets/cms2/img/pokedex/full/\";\n    this.url2 = \".png\";\n    this.rstatus = new EventEmitter();\n  }\n  ngOnInit() {\n    this.pokemons = [];\n    this.showresults = false;\n  }\n  getByName(name) {\n    this.pokemons = [];\n    this.showformflag = false;\n    this.showresults = true;\n    this.PokemonService.getPokemonByName(name).subscribe(response => {\n      if (Array.isArray(response)) {\n        this.pokemons = response; // La respuesta es un arreglo de Pokemon\n      } else {\n        this.pokemons = [response]; // La respuesta es un solo Pokemon\n      }\n    });\n  }\n  /*   getByPrice(precio: string) {\n      this.pokemons=[]\n      this.showformflag = false;\n      this.showresults = true;\n      this.PokemonService.getPokemonByPrice(parseInt(precio)).subscribe((response: any) => {\n        if (Array.isArray(response)) {\n          this.pokemons = response; // La respuesta es un arreglo de Pokemon\n        } else {\n          this.pokemons = [response]; // La respuesta es un solo Pokemon\n        }\n      });\n    } */\n  getByID(id) {\n    this.pokemons = [];\n    this.showformflag = false;\n    this.showresults = true;\n    this.PokemonService.getPokemonByID(id).subscribe(response => {\n      this.pokemons = [response];\n    });\n  }\n  showform() {\n    this.pokemons = []; //testearlo\n    if (this.showformflag == false) {\n      this.showresults = false;\n      this.showformflag = true;\n    } else this.showformflag = false;\n  }\n  deletePokemon(pokemon) {\n    this.showresults = false;\n    this.PokemonService.deletePokemon(pokemon._id).subscribe(response => {\n      if (response.status == 200) {\n        console.log(\"deleted true\");\n        this.rstatus.emit(true);\n      } else {\n        console.log(\"deleted true\");\n        this.rstatus.emit(false);\n      }\n    });\n  }\n  modify(pokemon) {\n    this.pokemonSeleccionado = pokemon;\n    this.showmodifyflag = true;\n    this.showresults = false;\n  }\n  modifyPokemon(_id, nombre, numero, generacion, region, tipo, evolucion, legendario, cantidad, precio) {\n    this.showmodifyflag = false;\n    this.showresults = false;\n    this.PokemonService.putPokemon(_id, nombre, numero, generacion, region, tipo, evolucion, legendario, cantidad, precio).subscribe(response => {\n      if (response.status == 200) {\n        console.log(\"event true\");\n        this.rstatus.emit(true);\n      } else {\n        console.log(\"event true\");\n        this.rstatus.emit(false);\n      }\n    });\n  }\n  cancelmodify() {\n    this.showmodifyflag = false;\n  }\n  getBoolean(value) {\n    switch (value) {\n      case \"true\":\n        return true;\n      default:\n        return false;\n    }\n  }\n};\n__decorate([Output()], GetPokemonComponent.prototype, \"rstatus\", void 0);\nGetPokemonComponent = __decorate([Component({\n  selector: 'app-get-pokemon',\n  templateUrl: './get-pokemon.component.html',\n  styleUrls: ['./get-pokemon.component.css']\n})], GetPokemonComponent);\nexport { GetPokemonComponent };","map":{"version":3,"mappings":"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","names":["Component","EventEmitter","Output","GetPokemonComponent","constructor","PokemonService","ngOnInit","pokemons","showresults","getByName","name","showformflag","getPokemonByName","subscribe","response","Array","isArray","getByID","id","getPokemonByID","showform","deletePokemon","pokemon","_id","status","console","log","rstatus","emit","modify","pokemonSeleccionado","showmodifyflag","modifyPokemon","nombre","numero","generacion","region","tipo","evolucion","legendario","cantidad","precio","putPokemon","cancelmodify","getBoolean","value","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/juan/AST-MEAN-Stack/frontend/src/app/components/get-pokemon/get-pokemon.component.ts"],"sourcesContent":["import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport Pokemon from 'src/app/models/pokemon';\nimport { PokemonService } from 'src/app/services/pokemon.service';\n\n@Component({\n  selector: 'app-get-pokemon',\n  templateUrl: './get-pokemon.component.html',\n  styleUrls: ['./get-pokemon.component.css']\n})\n\nexport class GetPokemonComponent implements OnInit {\n\n  showresults = false\n  showformflag = false\n  pokemons: Pokemon[] = [];\n  pokemonsolo!: Pokemon\n  pokemonSeleccionado!: Pokemon\n  showmodifyflag = false\n  url1: string = \"https://assets.pokemon.com/assets/cms2/img/pokedex/full/\";\n  url2: string = \".png\";\n  constructor(private PokemonService: PokemonService) {\n\n  }\n  ngOnInit(): void {\n    this.pokemons=[]\n    this.showresults = false\n  }\n\n  getByName(name: string) {\n    this.pokemons=[]\n    this.showformflag = false;\n    this.showresults = true;\n    this.PokemonService.getPokemonByName(name).subscribe((response: any) => {\n      if (Array.isArray(response)) {\n        this.pokemons = response; // La respuesta es un arreglo de Pokemon\n      } else {\n        this.pokemons = [response]; // La respuesta es un solo Pokemon\n      }\n    });\n  }\n\n/*   getByPrice(precio: string) {\n    this.pokemons=[]\n    this.showformflag = false;\n    this.showresults = true;\n    this.PokemonService.getPokemonByPrice(parseInt(precio)).subscribe((response: any) => {\n      if (Array.isArray(response)) {\n        this.pokemons = response; // La respuesta es un arreglo de Pokemon\n      } else {\n        this.pokemons = [response]; // La respuesta es un solo Pokemon\n      }\n    });\n  } */\n\n\n  getByID(id: string) {\n    this.pokemons=[]\n    this.showformflag = false;\n    this.showresults = true;\n    this.PokemonService.getPokemonByID(id).subscribe((response: any) => {\n      this.pokemons = [response];\n    });\n  }\n\n\n  showform() {\n    this.pokemons=[]//testearlo\n    if (this.showformflag == false) {\n      this.showresults = false\n      this.showformflag = true;\n    } else this.showformflag = false\n  }\n\n  @Output() rstatus = new EventEmitter<boolean>();\n\n  deletePokemon(pokemon: Pokemon) {\n    this.showresults = false\n    this.PokemonService.deletePokemon(pokemon._id)\n      .subscribe(response => {\n        if (response.status == 200) {\n          console.log(\"deleted true\")\n          this.rstatus.emit(true);\n        } else {\n          console.log(\"deleted true\")\n          this.rstatus.emit(false);\n        }\n      });\n  }\n\n  modify(pokemon: Pokemon) {\n    this.pokemonSeleccionado = pokemon;\n    this.showmodifyflag = true;\n    this.showresults = false\n\n  }\n\n\n  modifyPokemon(_id: string, nombre: string, numero: number, generacion: number, region: string, tipo: string, evolucion: boolean, legendario: boolean, cantidad: number, precio: number) {\n    this.showmodifyflag = false;\n    this.showresults = false\n    this.PokemonService.putPokemon(_id, nombre, numero, generacion, region, tipo, evolucion, legendario, cantidad, precio)\n      .subscribe(response => {\n        if (response.status == 200) {\n          console.log(\"event true\")\n          this.rstatus.emit(true);\n        } else {\n          console.log(\"event true\")\n          this.rstatus.emit(false);\n        }\n      });\n  }\n  cancelmodify() {\n    this.showmodifyflag = false;\n  }\n  getBoolean(value: string) {\n    switch (value) {\n      case \"true\":\n        return true;\n      default:\n        return false;\n    }\n\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}