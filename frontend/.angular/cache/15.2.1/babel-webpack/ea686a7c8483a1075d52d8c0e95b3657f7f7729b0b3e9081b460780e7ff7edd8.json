{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Output } from '@angular/core';\nlet ShowPokemonComponent = class ShowPokemonComponent {\n  constructor(PokemonService) {\n    this.PokemonService = PokemonService;\n    this.showmodifyflag = false;\n    this.pokemons = [];\n    this.url1 = \"https://assets.pokemon.com/assets/cms2/img/pokedex/full/\";\n    this.url2 = \".png\";\n    this.rstatus = new EventEmitter();\n  }\n  ngOnInit() {\n    this.PokemonService.getPokemons().subscribe(pokemons => this.pokemons = pokemons);\n  }\n  deletePokemon(pokemon) {\n    this.PokemonService.deletePokemon(pokemon._id).subscribe(response => {\n      if (response.status == 200) {\n        console.log(\"deleted true\");\n        this.rstatus.emit(true);\n      } else {\n        console.log(\"deleted true\");\n        this.rstatus.emit(false);\n      }\n    });\n  }\n  modify(pokemon) {\n    this.pokemonSeleccionado = pokemon;\n    this.showmodifyflag = true;\n  }\n  modifyPokemon(_id, nombre, numero, generacion, region, tipo, evolucion, legendario, cantidad, precio) {\n    this.showmodifyflag = false;\n    this.PokemonService.putPokemon(_id, nombre, numero, generacion, region, tipo, evolucion, legendario, cantidad, precio).subscribe(response => {\n      if (response.status == 200) {\n        console.log(\"event true\");\n        this.rstatus.emit(true);\n      } else {\n        console.log(\"event true\");\n        this.rstatus.emit(false);\n      }\n    });\n  }\n  cancelmodify() {\n    this.showmodifyflag = false;\n  }\n  getBoolean(value) {\n    switch (value) {\n      case \"true\":\n        return true;\n      default:\n        return false;\n    }\n  }\n};\n__decorate([Output()], ShowPokemonComponent.prototype, \"rstatus\", void 0);\nShowPokemonComponent = __decorate([Component({\n  selector: 'app-show-pokemon',\n  templateUrl: './show-pokemon.component.html',\n  styleUrls: ['./show-pokemon.component.css']\n})], ShowPokemonComponent);\nexport { ShowPokemonComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,YAAY,EAAUC,MAAM,QAAQ,eAAe;AAShE,IAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAO/BC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;IALlC,mBAAc,GAAG,KAAK;IACtB,aAAQ,GAAc,EAAE;IACxB,SAAI,GAAW,0DAA0D;IACzE,SAAI,GAAW,MAAM;IAUX,YAAO,GAAG,IAAIJ,YAAY,EAAW;EAN/C;EACAK,QAAQ;IACN,IAAI,CAACD,cAAc,CAACE,WAAW,EAAE,CAC9BC,SAAS,CAAEC,QAAa,IAAK,IAAI,CAACA,QAAQ,GAAGA,QAAQ,CAAC;EAC3D;EAIAC,aAAa,CAACC,OAAgB;IAC5B,IAAI,CAACN,cAAc,CAACK,aAAa,CAACC,OAAO,CAACC,GAAG,CAAC,CAC3CJ,SAAS,CAACK,QAAQ,IAAG;MACpB,IAAIA,QAAQ,CAACC,MAAM,IAAI,GAAG,EAAE;QAC1BC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;QAC3B,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,IAAI,CAAC;OACxB,MAAM;QACLH,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;QAC3B,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,KAAK,CAAC;;IAE5B,CAAC,CAAC;EACN;EAEAC,MAAM,CAACR,OAAgB;IACrB,IAAI,CAACS,mBAAmB,GAAGT,OAAO;IAClC,IAAI,CAACU,cAAc,GAAG,IAAI;EAE5B;EAGAC,aAAa,CAACV,GAAW,EAAEW,MAAc,EAAEC,MAAc,EAAEC,UAAkB,EAAEC,MAAc,EAAEC,IAAY,EAAEC,SAAkB,EAAEC,UAAmB,EAAEC,QAAgB,EAAEC,MAAc;IACpL,IAAI,CAACV,cAAc,GAAG,KAAK;IAC3B,IAAI,CAAChB,cAAc,CAAC2B,UAAU,CAACpB,GAAG,EAAEW,MAAM,EAAEC,MAAM,EAAEC,UAAU,EAAEC,MAAM,EAAEC,IAAI,EAAEC,SAAS,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,MAAM,CAAC,CACnHvB,SAAS,CAACK,QAAQ,IAAG;MACpB,IAAIA,QAAQ,CAACC,MAAM,IAAI,GAAG,EAAE;QAC1BC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;QACzB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,IAAI,CAAC;OACxB,MAAM;QACLH,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;QACzB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,KAAK,CAAC;;IAE5B,CAAC,CAAC;EACN;EACAe,YAAY;IACV,IAAI,CAACZ,cAAc,GAAG,KAAK;EAC7B;EACAa,UAAU,CAACC,KAAa;IACtB,QAAQA,KAAK;MACX,KAAK,MAAM;QACT,OAAO,IAAI;MACb;QACE,OAAO,KAAK;IAAC;EAGnB;CACD;AA/CWC,YAATlC,MAAM,EAAE,qDAAuC;AAfrCC,oBAAoB,eALhCH,SAAS,CAAC;EACTqC,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,GACWpC,oBAAoB,CA8DhC;SA9DYA,oBAAoB","names":["Component","EventEmitter","Output","ShowPokemonComponent","constructor","PokemonService","ngOnInit","getPokemons","subscribe","pokemons","deletePokemon","pokemon","_id","response","status","console","log","rstatus","emit","modify","pokemonSeleccionado","showmodifyflag","modifyPokemon","nombre","numero","generacion","region","tipo","evolucion","legendario","cantidad","precio","putPokemon","cancelmodify","getBoolean","value","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/juan/AST-MEAN-Stack/frontend/src/app/components/show-pokemon/show-pokemon.component.ts"],"sourcesContent":["import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport Pokemon from 'src/app/models/pokemon';\nimport { PokemonService } from 'src/app/services/pokemon.service';\n\n@Component({\n  selector: 'app-show-pokemon',\n  templateUrl: './show-pokemon.component.html',\n  styleUrls: ['./show-pokemon.component.css']\n})\nexport class ShowPokemonComponent implements OnInit {\n  pokemonSeleccionado!: Pokemon\n  showmodifyflag = false\n  pokemons: Pokemon[] = [];\n  url1: string = \"https://assets.pokemon.com/assets/cms2/img/pokedex/full/\";\n  url2: string = \".png\";\n\n  constructor(private PokemonService: PokemonService) {\n\n  }\n  ngOnInit() {\n    this.PokemonService.getPokemons()\n      .subscribe((pokemons: any) => this.pokemons = pokemons);\n  }\n\n  @Output() rstatus = new EventEmitter<boolean>();\n\n  deletePokemon(pokemon: Pokemon) {\n    this.PokemonService.deletePokemon(pokemon._id)\n      .subscribe(response => {\n        if (response.status == 200) {\n          console.log(\"deleted true\")\n          this.rstatus.emit(true);\n        } else {\n          console.log(\"deleted true\")\n          this.rstatus.emit(false);\n        }\n      });\n  }\n\n  modify(pokemon: Pokemon) {\n    this.pokemonSeleccionado = pokemon;\n    this.showmodifyflag = true;\n\n  }\n\n\n  modifyPokemon(_id: string, nombre: string, numero: number, generacion: number, region: string, tipo: string, evolucion: boolean, legendario: boolean, cantidad: number, precio: number) {\n    this.showmodifyflag = false;\n    this.PokemonService.putPokemon(_id, nombre, numero, generacion, region, tipo, evolucion, legendario, cantidad, precio)\n      .subscribe(response => {\n        if (response.status == 200) {\n          console.log(\"event true\")\n          this.rstatus.emit(true);\n        } else {\n          console.log(\"event true\")\n          this.rstatus.emit(false);\n        }\n      });\n  }\n  cancelmodify() {\n    this.showmodifyflag = false;\n  }\n  getBoolean(value: string) {\n    switch (value) {\n      case \"true\":\n        return true;\n      default:\n        return false;\n    }\n\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}